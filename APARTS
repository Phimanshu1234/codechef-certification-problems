 /*                  *
 * $HIMANSHU PANDEY$  *
 *                  *
 *~~~~~~~~~~~~~~~~~~*/
//
#include <math.h>
#include <time.h>
#include <ctype.h>
#include <stdio.h>
#include <assert.h>
#include <stdlib.h>
#include <string.h>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <string>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;
#define sp system("pause")
#define FOR(i,a,b) for(int i=a;i<=b;++i)
#define FORD(i,a,b) for(int i=a;i>=b;--i)
#define REP(i,n) FOR(i,0,(int)n-1)
#define pb(x) push_back(x)
#define mp(a,b) make_pair(a,b)
#define MS0(x) memset(x,0,sizeof(x))
#define MS1(x) memset(x,1,sizeof(x))
#define SORT(a,n) sort(begin(a),begin(a)+n)
#define REV(a,n) reverse(begin(a),begin(a)+n)
#define lld long long int
#define pii pair<int,int>
#define MOD 1000000007
#define INF (ll)100000000000000000
int main()
{
    lld t,n,m,k,i,r,j;
    cin>>t;
    while(t--)
    {k=0;
        cin>>n>>m;
        lld a[n+1][m+1];
        lld b[1001][1001]={0};
        for(i=0;i<n;i++)
        {
            for(j=0;j<m;j++)
            {
                cin>>a[i][j];
            }
        }
        for(i=0;i<m;i++)
        {
            b[0][i]=1;
        }
        for(i=1;i<n;i++)
        {
            for(j=0;j<m;j++)
            {
                 if(j==0)
                {
                    if(a[i][j]>max(a[i-1][j],a[i-1][j+1]))
                    {
                        b[i][j]=1;
                    }
                }
                if(j==m-1)
                {
                    if(a[i][j]>max(a[i-1][j-1],a[i-1][j]))
                    {
                        b[i][j]=1;
                    }
                }
                if(j!=0&&j!=m-1&&a[i][j]>max(a[i-1][j-1],max(a[i-1][j],a[i-1][j+1])))
                {
                        b[i][j]=1;
                }
                if(j==0&&b[i][j]==0)
                {
                    (a[i][j]=max(a[i-1][j],a[i-1][j+1]));
                }
                if(j==m-1&&b[i][j]==0)
                {
                    a[i][j]=max(a[i-1][j-1],a[i-1][j]);
                }
                    if(j!=0&&j!=m-1&&b[i][j]==0)
                    {
                        a[i][j]=max(a[i-1][j-1],max(a[i-1][j],a[i-1][j+1]));
                    }   
        }
        }
         for(i=0;i<n;i++)
        {
            for(j=0;j<m;j++)
            {
                cout<<b[i][j];
            }
           cout<<"\n";
        }
    }
    return 0;
}
