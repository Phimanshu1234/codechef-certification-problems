/* SANDEEP YADAv*/
#include<bits/stdc++.h>
using namespace std;
#define lld long long int
#define pb push_back
#define mkp make_pair
#define fi first
#define se second
#define mod 1000000007
#define fastio ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
lld gcd(lld a,lld b){ if(a<b) { a=a+b; b=a-b; a=a-b;}while(b!=0){lld r=a%b; a=b; b=r;} return a;}
long long power(long long a, long long b, long long m) {a %= m;long long res = 1;while (b > 0) {if (b & 1)res = res * a % m;a = a * a % m;b >>= 1;}return res;}
void judge()
{
      #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    freopen("error.txt","w",stderr);
    #endif
}

int main()
{
    fastio;
    //judge();

    lld n;
    cin>>n;

    lld a[n],b[n],c[n];
    for(lld i=0;i<n;i++)
    {
        cin>>a[i];
    }
    //sort(a,a+n);
    for(lld i=0;i<n;i++)
    {
        b[i]=a[i];
        c[i]=a[i];
    }
    lld d;
    d=a[1]-a[0];
    // cerr<<d;
    lld p=a[0];
    a[0]=mod;
    for(lld i=1;i<n;i++)
    {
        if(a[i]==p+d)
        {
            a[i]=mod;
            p=p+d;
        }
    }
    sort(a,a+n);
    d=a[1]-a[0];
    p=a[0];
    lld flag1=1;
    for(lld i=1;i<n;i++)
    {
        if(a[i]==mod)
            break;
        if(a[i]!=p+d)
        {
            flag1=0;
            break;
        }
        p=p+d;
    }
    for(lld i=0;i<n;i++)
        a[i]=b[i];
    d=a[2]-a[1];
     p=a[1];
    a[1]=mod;
    for(lld i=2;i<n;i++)
    {
        if(a[i]==p+d)
        {
            a[i]=mod;
            p=p+d;
        }
    }
    sort(a,a+n);
    d=a[1]-a[0];
    p=a[0];
    lld flag2=1;
    for(lld i=1;i<n;i++)
    {
        if(a[i]==mod)
            break;
        if(a[i]!=p+d)
        {
            flag2=0;
            break;
        }
        p=p+d;
    }
    for(lld i=0;i<n;i++)
        a[i]=b[i];
    d=a[2]-a[0];
     p=a[0];
    a[0]=mod;
    for(lld i=2;i<n;i++)
    {
        if(a[i]==p+d)
        {
            a[i]=mod;
            p=p+d;
        }
    }
    sort(a,a+n);
    d=a[1]-a[0];
    p=a[0];
    lld flag3=1;
    for(lld i=1;i<n;i++)
    {
        if(a[i]==mod)
            break;
        if(a[i]!=p+d)
        {
            flag3=0;
            break;
        }
        p=p+d;
    }
    // cerr<<flag1<<flag2<<flag3;
    if(flag1||flag2||flag3)
        cout<<"Yes";
    else
        cout<<"No";
    return 0;
}
